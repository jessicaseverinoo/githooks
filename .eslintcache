[{"/home/jessicaseverino/Documentos/github/githooks/src/reportWebVitals.js":"1","/home/jessicaseverino/Documentos/github/githooks/src/index.js":"2","/home/jessicaseverino/Documentos/github/githooks/src/App.js":"3","/home/jessicaseverino/Documentos/github/githooks/src/pages/ListRepositories/index.js":"4"},{"size":362,"mtime":1608947765262,"results":"5","hashOfConfig":"6"},{"size":266,"mtime":1608980326759,"results":"7","hashOfConfig":"6"},{"size":199,"mtime":1608982939054,"results":"8","hashOfConfig":"6"},{"size":2605,"mtime":1608987088638,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a45zqg",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jessicaseverino/Documentos/github/githooks/src/reportWebVitals.js",[],"/home/jessicaseverino/Documentos/github/githooks/src/index.js",[],"/home/jessicaseverino/Documentos/github/githooks/src/App.js",["18","19"],"/home/jessicaseverino/Documentos/github/githooks/src/pages/ListRepositories/index.js",["20"],{"ruleId":"21","severity":1,"message":"22","line":1,"column":17,"nodeType":"23","messageId":"24","endLine":1,"endColumn":26},{"ruleId":"21","severity":1,"message":"25","line":1,"column":28,"nodeType":"23","messageId":"24","endLine":1,"endColumn":36},{"ruleId":"26","severity":1,"message":"27","line":81,"column":13,"nodeType":"28","endLine":86,"endColumn":4},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]